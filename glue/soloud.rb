# SoLoud wrapper for Ruby
# This file is autogenerated; any changes will be overwritten

require "dl/import"

module SoLoud
	module CAPI
		extend DL::Importer
		dlload 'soloud_x86.dll'

		# Enumerations
		FFTFILTER_OVER=0
		SOLOUD_WASAPI=6
		SOLOUD_AUTO=0
		BIQUADRESONANTFILTER_NONE=0
		SOLOUD_CLIP_ROUNDOFF=1
		LOFIFILTER_BITDEPTH=2
		SOLOUD_SDL2=2
		SFXR_HURT=4
		FFTFILTER_MULTIPLY=2
		SOLOUD_ENABLE_VISUALIZATION=2
		BIQUADRESONANTFILTER_HIGHPASS=2
		SFXR_LASER=1
		SFXR_BLIP=6
		SFXR_JUMP=5
		LOFIFILTER_WET=0
		BIQUADRESONANTFILTER_WET=0
		LOFIFILTER_SAMPLERATE=1
		SOLOUD_SDL=1
		BIQUADRESONANTFILTER_LOWPASS=1
		SFXR_COIN=0
		FLANGERFILTER_FREQ=2
		SOLOUD_PORTAUDIO=3
		BIQUADRESONANTFILTER_SAMPLERATE=1
		SFXR_EXPLOSION=2
		BIQUADRESONANTFILTER_BANDPASS=3
		SOLOUD_OPENAL=8
		FLANGERFILTER_WET=0
		BIQUADRESONANTFILTER_FREQUENCY=2
		SFXR_POWERUP=3
		FFTFILTER_SUBTRACT=1
		SOLOUD_BACKEND_MAX=9
		BIQUADRESONANTFILTER_RESONANCE=3
		SOLOUD_XAUDIO2=5
		FLANGERFILTER_DELAY=1
		SOLOUD_WINMM=4
		SOLOUD_OSS=7

		# Raw DLL functions
		extern "void Soloud_destroy(Soloud *)"
		extern "Soloud * Soloud_create()"
		extern "int Soloud_init(Soloud *)"
		extern "int Soloud_initEx(Soloud *, unsigned int, unsigned int, unsigned int, unsigned int)"
		extern "void Soloud_deinit(Soloud *)"
		extern "unsigned int Soloud_getVersion(Soloud *)"
		extern "const char * Soloud_getErrorString(Soloud *, int)"
		extern "unsigned int Soloud_play(Soloud *, AudioSource *)"
		extern "unsigned int Soloud_playEx(Soloud *, AudioSource *, float, float, int, unsigned int)"
		extern "unsigned int Soloud_playClocked(Soloud *, double, AudioSource *)"
		extern "unsigned int Soloud_playClockedEx(Soloud *, double, AudioSource *, float, float, unsigned int)"
		extern "void Soloud_seek(Soloud *, unsigned int, double)"
		extern "void Soloud_stop(Soloud *, unsigned int)"
		extern "void Soloud_stopAll(Soloud *)"
		extern "void Soloud_stopAudioSource(Soloud *, AudioSource *)"
		extern "void Soloud_setFilterParameter(Soloud *, unsigned int, unsigned int, unsigned int, float)"
		extern "float Soloud_getFilterParameter(Soloud *, unsigned int, unsigned int, unsigned int)"
		extern "void Soloud_fadeFilterParameter(Soloud *, unsigned int, unsigned int, unsigned int, float, double)"
		extern "void Soloud_oscillateFilterParameter(Soloud *, unsigned int, unsigned int, unsigned int, float, float, double)"
		extern "double Soloud_getStreamTime(Soloud *, unsigned int)"
		extern "int Soloud_getPause(Soloud *, unsigned int)"
		extern "float Soloud_getVolume(Soloud *, unsigned int)"
		extern "float Soloud_getPan(Soloud *, unsigned int)"
		extern "float Soloud_getSamplerate(Soloud *, unsigned int)"
		extern "int Soloud_getProtectVoice(Soloud *, unsigned int)"
		extern "unsigned int Soloud_getActiveVoiceCount(Soloud *)"
		extern "int Soloud_isValidVoiceHandle(Soloud *, unsigned int)"
		extern "float Soloud_getRelativePlaySpeed(Soloud *, unsigned int)"
		extern "float Soloud_getPostClipScaler(Soloud *)"
		extern "float Soloud_getGlobalVolume(Soloud *)"
		extern "void Soloud_setGlobalVolume(Soloud *, float)"
		extern "void Soloud_setPostClipScaler(Soloud *, float)"
		extern "void Soloud_setPause(Soloud *, unsigned int, int)"
		extern "void Soloud_setPauseAll(Soloud *, int)"
		extern "void Soloud_setRelativePlaySpeed(Soloud *, unsigned int, float)"
		extern "void Soloud_setProtectVoice(Soloud *, unsigned int, int)"
		extern "void Soloud_setSamplerate(Soloud *, unsigned int, float)"
		extern "void Soloud_setPan(Soloud *, unsigned int, float)"
		extern "void Soloud_setPanAbsolute(Soloud *, unsigned int, float, float)"
		extern "void Soloud_setVolume(Soloud *, unsigned int, float)"
		extern "void Soloud_setDelaySamples(Soloud *, unsigned int, unsigned int)"
		extern "void Soloud_fadeVolume(Soloud *, unsigned int, float, double)"
		extern "void Soloud_fadePan(Soloud *, unsigned int, float, double)"
		extern "void Soloud_fadeRelativePlaySpeed(Soloud *, unsigned int, float, double)"
		extern "void Soloud_fadeGlobalVolume(Soloud *, float, double)"
		extern "void Soloud_schedulePause(Soloud *, unsigned int, double)"
		extern "void Soloud_scheduleStop(Soloud *, unsigned int, double)"
		extern "void Soloud_oscillateVolume(Soloud *, unsigned int, float, float, double)"
		extern "void Soloud_oscillatePan(Soloud *, unsigned int, float, float, double)"
		extern "void Soloud_oscillateRelativePlaySpeed(Soloud *, unsigned int, float, float, double)"
		extern "void Soloud_oscillateGlobalVolume(Soloud *, float, float, double)"
		extern "void Soloud_setGlobalFilter(Soloud *, unsigned int, Filter *)"
		extern "void Soloud_setVisualizationEnable(Soloud *, int)"
		extern "float * Soloud_calcFFT(Soloud *)"
		extern "float * Soloud_getWave(Soloud *)"
		extern "unsigned int Soloud_getLoopCount(Soloud *, unsigned int)"
		extern "unsigned int Soloud_createVoiceGroup(Soloud *)"
		extern "int Soloud_destroyVoiceGroup(Soloud *, unsigned int)"
		extern "int Soloud_addVoiceToGroup(Soloud *, unsigned int, unsigned int)"
		extern "int Soloud_isVoiceGroup(Soloud *, unsigned int)"
		extern "int Soloud_isVoiceGroupEmpty(Soloud *, unsigned int)"
		extern "void BiquadResonantFilter_destroy(BiquadResonantFilter *)"
		extern "BiquadResonantFilter * BiquadResonantFilter_create()"
		extern "int BiquadResonantFilter_setParams(BiquadResonantFilter *, int, float, float, float)"
		extern "void Bus_destroy(Bus *)"
		extern "Bus * Bus_create()"
		extern "void Bus_setFilter(Bus *, unsigned int, Filter *)"
		extern "unsigned int Bus_play(Bus *, AudioSource *)"
		extern "unsigned int Bus_playEx(Bus *, AudioSource *, float, float, int)"
		extern "unsigned int Bus_playClocked(Bus *, double, AudioSource *)"
		extern "unsigned int Bus_playClockedEx(Bus *, double, AudioSource *, float, float)"
		extern "void Bus_setVisualizationEnable(Bus *, int)"
		extern "float * Bus_calcFFT(Bus *)"
		extern "float * Bus_getWave(Bus *)"
		extern "void Bus_setLooping(Bus *, int)"
		extern "void Bus_stop(Bus *)"
		extern "void EchoFilter_destroy(EchoFilter *)"
		extern "EchoFilter * EchoFilter_create()"
		extern "int EchoFilter_setParams(EchoFilter *, float)"
		extern "int EchoFilter_setParamsEx(EchoFilter *, float, float, float)"
		extern "void FFTFilter_destroy(FFTFilter *)"
		extern "FFTFilter * FFTFilter_create()"
		extern "int FFTFilter_setParameters(FFTFilter *, int)"
		extern "int FFTFilter_setParametersEx(FFTFilter *, int, int, float)"
		extern "void FlangerFilter_destroy(FlangerFilter *)"
		extern "FlangerFilter * FlangerFilter_create()"
		extern "int FlangerFilter_setParams(FlangerFilter *, float, float)"
		extern "void LofiFilter_destroy(LofiFilter *)"
		extern "LofiFilter * LofiFilter_create()"
		extern "int LofiFilter_setParams(LofiFilter *, float, float)"
		extern "void Modplug_destroy(Modplug *)"
		extern "Modplug * Modplug_create()"
		extern "int Modplug_load(Modplug *, const char *)"
		extern "void Modplug_setLooping(Modplug *, int)"
		extern "void Modplug_setFilter(Modplug *, unsigned int, Filter *)"
		extern "void Modplug_stop(Modplug *)"
		extern "void Prg_destroy(Prg *)"
		extern "Prg * Prg_create()"
		extern "unsigned int Prg_rand(Prg *)"
		extern "void Prg_srand(Prg *, int)"
		extern "void Sfxr_destroy(Sfxr *)"
		extern "Sfxr * Sfxr_create()"
		extern "void Sfxr_resetParams(Sfxr *)"
		extern "int Sfxr_loadParams(Sfxr *, const char *)"
		extern "int Sfxr_loadPreset(Sfxr *, int, int)"
		extern "void Sfxr_setLooping(Sfxr *, int)"
		extern "void Sfxr_setFilter(Sfxr *, unsigned int, Filter *)"
		extern "void Sfxr_stop(Sfxr *)"
		extern "void Speech_destroy(Speech *)"
		extern "Speech * Speech_create()"
		extern "int Speech_setText(Speech *, const char *)"
		extern "void Speech_setLooping(Speech *, int)"
		extern "void Speech_setFilter(Speech *, unsigned int, Filter *)"
		extern "void Speech_stop(Speech *)"
		extern "void Wav_destroy(Wav *)"
		extern "Wav * Wav_create()"
		extern "int Wav_load(Wav *, const char *)"
		extern "int Wav_loadMem(Wav *, unsigned char *, unsigned int)"
		extern "double Wav_getLength(Wav *)"
		extern "void Wav_setLooping(Wav *, int)"
		extern "void Wav_setFilter(Wav *, unsigned int, Filter *)"
		extern "void Wav_stop(Wav *)"
		extern "void WavStream_destroy(WavStream *)"
		extern "WavStream * WavStream_create()"
		extern "int WavStream_load(WavStream *, const char *)"
		extern "double WavStream_getLength(WavStream *)"
		extern "void WavStream_setLooping(WavStream *, int)"
		extern "void WavStream_setFilter(WavStream *, unsigned int, Filter *)"
		extern "void WavStream_stop(WavStream *)"
	end


	# OOP wrappers

	class Soloud
		attr_reader :objhandle
		WASAPI=6
		AUTO=0
		CLIP_ROUNDOFF=1
		SDL2=2
		ENABLE_VISUALIZATION=2
		SDL=1
		PORTAUDIO=3
		OPENAL=8
		BACKEND_MAX=9
		XAUDIO2=5
		WINMM=4
		OSS=7
		def initialize()
			@objhandle = SoLoud::CAPI.Soloud_create()
		end	
		def destroy()
			SoLoud::CAPI.Soloud_destroy(@objhandle)
		end
		def init(aFlags=CLIP_ROUNDOFF, aBackend=AUTO, aSamplerate=AUTO, aBufferSize=AUTO)
			SoLoud::CAPI.Soloud_initEx(@objhandle, aFlags, aBackend, aSamplerate, aBufferSize)
		end
		def deinit()
			SoLoud::CAPI.Soloud_deinit(@objhandle)
		end
		def getVersion()
			SoLoud::CAPI.Soloud_getVersion(@objhandle)
		end
		def getErrorString(aErrorCode)
			SoLoud::CAPI.Soloud_getErrorString(@objhandle, aErrorCode)
		end
		def play(aSound, aVolume=1.0, aPan=0.0, aPaused=0, aBus=0)
			SoLoud::CAPI.Soloud_playEx(@objhandle, aSound.objhandle, aVolume, aPan, aPaused, aBus)
		end
		def playClocked(aSoundTime, aSound, aVolume=1.0, aPan=0.0, aBus=0)
			SoLoud::CAPI.Soloud_playClockedEx(@objhandle, aSoundTime, aSound.objhandle, aVolume, aPan, aBus)
		end
		def seek(aVoiceHandle, aSeconds)
			SoLoud::CAPI.Soloud_seek(@objhandle, aVoiceHandle, aSeconds)
		end
		def stop(aVoiceHandle)
			SoLoud::CAPI.Soloud_stop(@objhandle, aVoiceHandle)
		end
		def stopAll()
			SoLoud::CAPI.Soloud_stopAll(@objhandle)
		end
		def stopAudioSource(aSound)
			SoLoud::CAPI.Soloud_stopAudioSource(@objhandle, aSound.objhandle)
		end
		def setFilterParameter(aVoiceHandle, aFilterId, aAttributeId, aValue)
			SoLoud::CAPI.Soloud_setFilterParameter(@objhandle, aVoiceHandle, aFilterId, aAttributeId, aValue)
		end
		def getFilterParameter(aVoiceHandle, aFilterId, aAttributeId)
			SoLoud::CAPI.Soloud_getFilterParameter(@objhandle, aVoiceHandle, aFilterId, aAttributeId)
		end
		def fadeFilterParameter(aVoiceHandle, aFilterId, aAttributeId, aTo, aTime)
			SoLoud::CAPI.Soloud_fadeFilterParameter(@objhandle, aVoiceHandle, aFilterId, aAttributeId, aTo, aTime)
		end
		def oscillateFilterParameter(aVoiceHandle, aFilterId, aAttributeId, aFrom, aTo, aTime)
			SoLoud::CAPI.Soloud_oscillateFilterParameter(@objhandle, aVoiceHandle, aFilterId, aAttributeId, aFrom, aTo, aTime)
		end
		def getStreamTime(aVoiceHandle)
			SoLoud::CAPI.Soloud_getStreamTime(@objhandle, aVoiceHandle)
		end
		def getPause(aVoiceHandle)
			SoLoud::CAPI.Soloud_getPause(@objhandle, aVoiceHandle)
		end
		def getVolume(aVoiceHandle)
			SoLoud::CAPI.Soloud_getVolume(@objhandle, aVoiceHandle)
		end
		def getPan(aVoiceHandle)
			SoLoud::CAPI.Soloud_getPan(@objhandle, aVoiceHandle)
		end
		def getSamplerate(aVoiceHandle)
			SoLoud::CAPI.Soloud_getSamplerate(@objhandle, aVoiceHandle)
		end
		def getProtectVoice(aVoiceHandle)
			SoLoud::CAPI.Soloud_getProtectVoice(@objhandle, aVoiceHandle)
		end
		def getActiveVoiceCount()
			SoLoud::CAPI.Soloud_getActiveVoiceCount(@objhandle)
		end
		def isValidVoiceHandle(aVoiceHandle)
			SoLoud::CAPI.Soloud_isValidVoiceHandle(@objhandle, aVoiceHandle)
		end
		def getRelativePlaySpeed(aVoiceHandle)
			SoLoud::CAPI.Soloud_getRelativePlaySpeed(@objhandle, aVoiceHandle)
		end
		def getPostClipScaler()
			SoLoud::CAPI.Soloud_getPostClipScaler(@objhandle)
		end
		def getGlobalVolume()
			SoLoud::CAPI.Soloud_getGlobalVolume(@objhandle)
		end
		def setGlobalVolume(aVolume)
			SoLoud::CAPI.Soloud_setGlobalVolume(@objhandle, aVolume)
		end
		def setPostClipScaler(aScaler)
			SoLoud::CAPI.Soloud_setPostClipScaler(@objhandle, aScaler)
		end
		def setPause(aVoiceHandle, aPause)
			SoLoud::CAPI.Soloud_setPause(@objhandle, aVoiceHandle, aPause)
		end
		def setPauseAll(aPause)
			SoLoud::CAPI.Soloud_setPauseAll(@objhandle, aPause)
		end
		def setRelativePlaySpeed(aVoiceHandle, aSpeed)
			SoLoud::CAPI.Soloud_setRelativePlaySpeed(@objhandle, aVoiceHandle, aSpeed)
		end
		def setProtectVoice(aVoiceHandle, aProtect)
			SoLoud::CAPI.Soloud_setProtectVoice(@objhandle, aVoiceHandle, aProtect)
		end
		def setSamplerate(aVoiceHandle, aSamplerate)
			SoLoud::CAPI.Soloud_setSamplerate(@objhandle, aVoiceHandle, aSamplerate)
		end
		def setPan(aVoiceHandle, aPan)
			SoLoud::CAPI.Soloud_setPan(@objhandle, aVoiceHandle, aPan)
		end
		def setPanAbsolute(aVoiceHandle, aLVolume, aRVolume)
			SoLoud::CAPI.Soloud_setPanAbsolute(@objhandle, aVoiceHandle, aLVolume, aRVolume)
		end
		def setVolume(aVoiceHandle, aVolume)
			SoLoud::CAPI.Soloud_setVolume(@objhandle, aVoiceHandle, aVolume)
		end
		def setDelaySamples(aVoiceHandle, aSamples)
			SoLoud::CAPI.Soloud_setDelaySamples(@objhandle, aVoiceHandle, aSamples)
		end
		def fadeVolume(aVoiceHandle, aTo, aTime)
			SoLoud::CAPI.Soloud_fadeVolume(@objhandle, aVoiceHandle, aTo, aTime)
		end
		def fadePan(aVoiceHandle, aTo, aTime)
			SoLoud::CAPI.Soloud_fadePan(@objhandle, aVoiceHandle, aTo, aTime)
		end
		def fadeRelativePlaySpeed(aVoiceHandle, aTo, aTime)
			SoLoud::CAPI.Soloud_fadeRelativePlaySpeed(@objhandle, aVoiceHandle, aTo, aTime)
		end
		def fadeGlobalVolume(aTo, aTime)
			SoLoud::CAPI.Soloud_fadeGlobalVolume(@objhandle, aTo, aTime)
		end
		def schedulePause(aVoiceHandle, aTime)
			SoLoud::CAPI.Soloud_schedulePause(@objhandle, aVoiceHandle, aTime)
		end
		def scheduleStop(aVoiceHandle, aTime)
			SoLoud::CAPI.Soloud_scheduleStop(@objhandle, aVoiceHandle, aTime)
		end
		def oscillateVolume(aVoiceHandle, aFrom, aTo, aTime)
			SoLoud::CAPI.Soloud_oscillateVolume(@objhandle, aVoiceHandle, aFrom, aTo, aTime)
		end
		def oscillatePan(aVoiceHandle, aFrom, aTo, aTime)
			SoLoud::CAPI.Soloud_oscillatePan(@objhandle, aVoiceHandle, aFrom, aTo, aTime)
		end
		def oscillateRelativePlaySpeed(aVoiceHandle, aFrom, aTo, aTime)
			SoLoud::CAPI.Soloud_oscillateRelativePlaySpeed(@objhandle, aVoiceHandle, aFrom, aTo, aTime)
		end
		def oscillateGlobalVolume(aFrom, aTo, aTime)
			SoLoud::CAPI.Soloud_oscillateGlobalVolume(@objhandle, aFrom, aTo, aTime)
		end
		def setGlobalFilter(aFilterId, aFilter)
			SoLoud::CAPI.Soloud_setGlobalFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def setVisualizationEnable(aEnable)
			SoLoud::CAPI.Soloud_setVisualizationEnable(@objhandle, aEnable)
		end
		def calcFFT()
			SoLoud::CAPI.Soloud_calcFFT(@objhandle)
		end
		def getWave()
			SoLoud::CAPI.Soloud_getWave(@objhandle)
		end
		def getLoopCount(aVoiceHandle)
			SoLoud::CAPI.Soloud_getLoopCount(@objhandle, aVoiceHandle)
		end
		def createVoiceGroup()
			SoLoud::CAPI.Soloud_createVoiceGroup(@objhandle)
		end
		def destroyVoiceGroup(aVoiceGroupHandle)
			SoLoud::CAPI.Soloud_destroyVoiceGroup(@objhandle, aVoiceGroupHandle)
		end
		def addVoiceToGroup(aVoiceGroupHandle, aVoiceHandle)
			SoLoud::CAPI.Soloud_addVoiceToGroup(@objhandle, aVoiceGroupHandle, aVoiceHandle)
		end
		def isVoiceGroup(aVoiceGroupHandle)
			SoLoud::CAPI.Soloud_isVoiceGroup(@objhandle, aVoiceGroupHandle)
		end
		def isVoiceGroupEmpty(aVoiceGroupHandle)
			SoLoud::CAPI.Soloud_isVoiceGroupEmpty(@objhandle, aVoiceGroupHandle)
		end
	end

	class BiquadResonantFilter
		attr_reader :objhandle
		NONE=0
		HIGHPASS=2
		WET=0
		LOWPASS=1
		SAMPLERATE=1
		BANDPASS=3
		FREQUENCY=2
		RESONANCE=3
		def initialize()
			@objhandle = SoLoud::CAPI.BiquadResonantFilter_create()
		end	
		def destroy()
			SoLoud::CAPI.BiquadResonantFilter_destroy(@objhandle)
		end
		def setParams(aType, aSampleRate, aFrequency, aResonance)
			SoLoud::CAPI.BiquadResonantFilter_setParams(@objhandle, aType, aSampleRate, aFrequency, aResonance)
		end
	end

	class Bus
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.Bus_create()
		end	
		def destroy()
			SoLoud::CAPI.Bus_destroy(@objhandle)
		end
		def setFilter(aFilterId, aFilter)
			SoLoud::CAPI.Bus_setFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def play(aSound, aVolume=1.0, aPan=0.0, aPaused=0)
			SoLoud::CAPI.Bus_playEx(@objhandle, aSound.objhandle, aVolume, aPan, aPaused)
		end
		def playClocked(aSoundTime, aSound, aVolume=1.0, aPan=0.0)
			SoLoud::CAPI.Bus_playClockedEx(@objhandle, aSoundTime, aSound.objhandle, aVolume, aPan)
		end
		def setVisualizationEnable(aEnable)
			SoLoud::CAPI.Bus_setVisualizationEnable(@objhandle, aEnable)
		end
		def calcFFT()
			SoLoud::CAPI.Bus_calcFFT(@objhandle)
		end
		def getWave()
			SoLoud::CAPI.Bus_getWave(@objhandle)
		end
		def setLooping(aLoop)
			SoLoud::CAPI.Bus_setLooping(@objhandle, aLoop)
		end
		def stop()
			SoLoud::CAPI.Bus_stop(@objhandle)
		end
	end

	class EchoFilter
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.EchoFilter_create()
		end	
		def destroy()
			SoLoud::CAPI.EchoFilter_destroy(@objhandle)
		end
		def setParams(aDelay, aDecay=0.7, aFilter=0.0)
			SoLoud::CAPI.EchoFilter_setParamsEx(@objhandle, aDelay, aDecay, aFilter)
		end
	end

	class FFTFilter
		attr_reader :objhandle
		OVER=0
		MULTIPLY=2
		SUBTRACT=1
		def initialize()
			@objhandle = SoLoud::CAPI.FFTFilter_create()
		end	
		def destroy()
			SoLoud::CAPI.FFTFilter_destroy(@objhandle)
		end
		def setParameters(aShift, aCombine=0, aScale=0.002)
			SoLoud::CAPI.FFTFilter_setParametersEx(@objhandle, aShift, aCombine, aScale)
		end
	end

	class FlangerFilter
		attr_reader :objhandle
		FREQ=2
		WET=0
		DELAY=1
		def initialize()
			@objhandle = SoLoud::CAPI.FlangerFilter_create()
		end	
		def destroy()
			SoLoud::CAPI.FlangerFilter_destroy(@objhandle)
		end
		def setParams(aDelay, aFreq)
			SoLoud::CAPI.FlangerFilter_setParams(@objhandle, aDelay, aFreq)
		end
	end

	class LofiFilter
		attr_reader :objhandle
		BITDEPTH=2
		WET=0
		SAMPLERATE=1
		def initialize()
			@objhandle = SoLoud::CAPI.LofiFilter_create()
		end	
		def destroy()
			SoLoud::CAPI.LofiFilter_destroy(@objhandle)
		end
		def setParams(aSampleRate, aBitdepth)
			SoLoud::CAPI.LofiFilter_setParams(@objhandle, aSampleRate, aBitdepth)
		end
	end

	class Modplug
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.Modplug_create()
		end	
		def destroy()
			SoLoud::CAPI.Modplug_destroy(@objhandle)
		end
		def load(aFilename)
			SoLoud::CAPI.Modplug_load(@objhandle, aFilename)
		end
		def setLooping(aLoop)
			SoLoud::CAPI.Modplug_setLooping(@objhandle, aLoop)
		end
		def setFilter(aFilterId, aFilter)
			SoLoud::CAPI.Modplug_setFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def stop()
			SoLoud::CAPI.Modplug_stop(@objhandle)
		end
	end

	class Prg
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.Prg_create()
		end	
		def destroy()
			SoLoud::CAPI.Prg_destroy(@objhandle)
		end
		def rand()
			SoLoud::CAPI.Prg_rand(@objhandle)
		end
		def srand(aSeed)
			SoLoud::CAPI.Prg_srand(@objhandle, aSeed)
		end
	end

	class Sfxr
		attr_reader :objhandle
		HURT=4
		LASER=1
		BLIP=6
		JUMP=5
		COIN=0
		EXPLOSION=2
		POWERUP=3
		def initialize()
			@objhandle = SoLoud::CAPI.Sfxr_create()
		end	
		def destroy()
			SoLoud::CAPI.Sfxr_destroy(@objhandle)
		end
		def resetParams()
			SoLoud::CAPI.Sfxr_resetParams(@objhandle)
		end
		def loadParams(aFilename)
			SoLoud::CAPI.Sfxr_loadParams(@objhandle, aFilename)
		end
		def loadPreset(aPresetNo, aRandSeed)
			SoLoud::CAPI.Sfxr_loadPreset(@objhandle, aPresetNo, aRandSeed)
		end
		def setLooping(aLoop)
			SoLoud::CAPI.Sfxr_setLooping(@objhandle, aLoop)
		end
		def setFilter(aFilterId, aFilter)
			SoLoud::CAPI.Sfxr_setFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def stop()
			SoLoud::CAPI.Sfxr_stop(@objhandle)
		end
	end

	class Speech
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.Speech_create()
		end	
		def destroy()
			SoLoud::CAPI.Speech_destroy(@objhandle)
		end
		def setText(aText)
			SoLoud::CAPI.Speech_setText(@objhandle, aText)
		end
		def setLooping(aLoop)
			SoLoud::CAPI.Speech_setLooping(@objhandle, aLoop)
		end
		def setFilter(aFilterId, aFilter)
			SoLoud::CAPI.Speech_setFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def stop()
			SoLoud::CAPI.Speech_stop(@objhandle)
		end
	end

	class Wav
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.Wav_create()
		end	
		def destroy()
			SoLoud::CAPI.Wav_destroy(@objhandle)
		end
		def load(aFilename)
			SoLoud::CAPI.Wav_load(@objhandle, aFilename)
		end
		def loadMem(aMem, aLength)
			SoLoud::CAPI.Wav_loadMem(@objhandle, aMem, aLength)
		end
		def getLength()
			SoLoud::CAPI.Wav_getLength(@objhandle)
		end
		def setLooping(aLoop)
			SoLoud::CAPI.Wav_setLooping(@objhandle, aLoop)
		end
		def setFilter(aFilterId, aFilter)
			SoLoud::CAPI.Wav_setFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def stop()
			SoLoud::CAPI.Wav_stop(@objhandle)
		end
	end

	class WavStream
		attr_reader :objhandle
		def initialize()
			@objhandle = SoLoud::CAPI.WavStream_create()
		end	
		def destroy()
			SoLoud::CAPI.WavStream_destroy(@objhandle)
		end
		def load(aFilename)
			SoLoud::CAPI.WavStream_load(@objhandle, aFilename)
		end
		def getLength()
			SoLoud::CAPI.WavStream_getLength(@objhandle)
		end
		def setLooping(aLoop)
			SoLoud::CAPI.WavStream_setLooping(@objhandle, aLoop)
		end
		def setFilter(aFilterId, aFilter)
			SoLoud::CAPI.WavStream_setFilter(@objhandle, aFilterId, aFilter.objhandle)
		end
		def stop()
			SoLoud::CAPI.WavStream_stop(@objhandle)
		end
	end
end
